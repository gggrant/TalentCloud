# Nginx configuration

http {

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    #tcp_nopush     on;

    client_body_timeout   10;
    client_header_timeout 10;
    keepalive_timeout     5 5;
    send_timeout          10;

    server_tokens off;
    gzip off;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

    add_header Cache-Control no-store;
    add_header Pragma no-cache;

    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name talent.local.ca;
        return 301 https://$server_name$request_uri;

        error_log  /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;

        root /var/www/public;
        index index.php index.html;

        # serve static files directly
        location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
            access_log off;
            expires max;
            log_not_found off;
        }

        # removes trailing slashes (prevents SEO duplicate content issues)
        if (!-d $request_filename)
        {
            rewrite ^/(.+)/$ /$1 permanent;
        }

        # enforce NO www
        if ($host ~* ^www\.(.*))
        {
            set $host_without_www $1;
            rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
        }

        # unless the request is for a valid file (image, js, css, etc.), send to bootstrap
        if (!-e $request_filename)
        {
            rewrite ^/(.*)$ /index.php?/$1 last;
            break;
        }

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~* \.php$ {
            try_files $uri = 404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass talentcloud:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
    }

    server {
        server_name talent.local.ca *.talent.local.ca;

        listen 443 ssl;

        fastcgi_param HTTPS on;

        ssl_certificate /etc/ssl/server.pem;
        ssl_certificate_key /etc/ssl/server.key;

        ssl_protocols TLSv1.2; # Dropping SSLv3; ref: POODLE
        ssl_prefer_server_ciphers on;

        error_log  /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;

        root /var/www/public;
        index index.php index.html;

        error_page 403 =404 /404.html;

        location ~ ^/.+\.php(/|$) {
            try_files $uri = 404;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_pass talentcloud:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS off;
            include fastcgi_params;
        }

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~/web\.config {
            deny all;
        }

        location ~/\.ht {
            deny all;
        }
    }
}
